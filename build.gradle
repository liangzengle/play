buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.4.1"
    }
}

configure(subprojects - project(':play-scala')) {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
    }
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.kotlin.kapt'
    apply plugin: "org.jlleitschuh.gradle.ktlint-idea"
    apply plugin: "kotlin-spring"


    ktlint {
//        debug = true
        verbose = true
    }

    group 'play'
    version '1.0-SNAPSHOT'

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

        api "com.google.auto.service:auto-service:$auto_service_version"
        kapt "com.google.auto.service:auto-service:$auto_service_version"
    }

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    def kotlinCompilerArgs = [
            "-Xallow-result-return-type",
            "-XXLanguage:+InlineClasses",
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xopt-in=kotlin.ExperimentalUnsignedTypes",
            "-Xopt-in=kotlin.time.ExperimentalTime",
            "-Xopt-in=kotlin.contracts.ExperimentalContracts",
            "-Xopt-in=kotlin.experimental.ExperimentalTypeInference",
            "-Xopt-in=kotlin.io.path.ExperimentalPathApi",
            "-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi",
            "-Xopt-in=kotlinx.serialization.InternalSerializationApi",
            "-Xjvm-default=all",
            "-Xstring-concat=indy-with-constants"
    ]

    compileKotlin {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_11
            javaParameters = true
            freeCompilerArgs = kotlinCompilerArgs
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_11
            javaParameters = true
            freeCompilerArgs = kotlinCompilerArgs
        }
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.encoding = "UTF-8"
        options.compilerArgs << '-parameters'
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }
}