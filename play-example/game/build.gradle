plugins {
    id "play.modular-code" version "0.1"
    id 'org.jetbrains.kotlin.plugin.serialization' version libs.versions.kotlin.lang
    id 'application'
}

application {
    mainClass = "play.example.game.AppKt"
}

task createStartScripts(type: CreateStartScripts) {
    applicationName = "app"
    unixStartScriptGenerator.template = resources.text.fromFile('unixStartScript2.txt')
    windowsStartScriptGenerator.template = resources.text.fromFile('windowsStartScript.txt')
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    mavenCentral()
    maven {
        url "file://$rootDir/repository"
    }
}

dependencies {
    api project(':play-example-common')
    api project(':play-example-rpc-api')
    api project(':play-net')
    api project(':play-mongodb')
    api project(':play-mvc')
    api project(':play-spring')

    compileOnly project(':play-codegen-annotations')
    compileOnly project(":play-codegen")
    kapt project(":play-codegen")

    kapt libs.hibernate.validator.apt

    api libs.javax.inject

    api libs.bundles.log4j

    testImplementation libs.kotlinpoet.poet
    testImplementation libs.kotlinpoet.metadata
}


kapt {
    arguments {
        arg("controller.user-class", "play.example.game.app.module.player.Self")
        arg("controller.manager.package", "play.example.game.app")
        arg("entityCache.specialized", "false")
    }
}

modularCode {
    enabled = true
    annotation = ["play.example.game.app.module.ModularCode"]
}