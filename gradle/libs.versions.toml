[versions]
akka = "2.6.17"
asm = "9.2"
auto-service = "1.0.1"
bson4jackson = "2.13.0"
caffeine = "3.0.4"
checker = "3.19.0"
classgraph = "4.8.131"
eclipse-collections = "10.4.0"
fastutil = "8.5.6"
guava = "31.0.1-jre"
hibernate-validator = "7.0.1.Final"
javax-inject = "1"
jackson = "2.13.0"
jakarta-el-api = "4.0.0"
jakarta-el-impl = "4.0.2"
jctools = "3.3.0"
junit = "5.8.1"
kotlin-lang = "1.6.0"
# kotlin-lang = "1.5.31"
kotlin-logging = "2.0.11"
kotlinpoet-poet = "1.10.2"
kotlinx-serialization = "1.3.1"
ksp = "1.6.0-1.0.1"
ktlint = "10.2.0"
log4j = "2.14.1"
logback = "1.2.7"
micrometer = "1.8.0"
mongodb-driver = "4.4.0"
mvel = "2.4.13.Final"
netty = "4.1.70.Final"
scala-library = "3.1.0"
scala-java8-compact = "1.0.2"
slf4j = "1.7.32"
spring-boot = "2.5.6"
typesafe-config = "1.4.1"
unsafe-accessor = "1.6.1"

[libraries]
akka-typed-actor = { module = "com.typesafe.akka:akka-actor-typed_3", version.ref = "akka" }
akka-typed-cluster = { module = "com.typesafe.akka:akka-cluster-typed_3", version.ref = "akka" }
akka-typed-serialization-jackson = { module = "com.typesafe.akka:akka-serialization-jackson_3", version.ref = "akka" }
asm = { module = "org.ow2.asm:asm", version.ref = "asm" }
auto-service = { module = "com.google.auto.service:auto-service", version.ref = "auto-service" }
bson4jackson = { module = "de.undercouch:bson4jackson", version.ref = "bson4jackson" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
checker = { module = "org.checkerframework:checker-qual", version.ref = "checker" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
eclipse-collections = { module = "org.eclipse.collections:eclipse-collections", version.ref = "eclipse-collections" }
fastutil-core = { module = "it.unimi.dsi:fastutil-core", version.ref = "fastutil" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
jakarta-el-api = { module = "jakarta.el:jakarta.el-api", version.ref = "jakarta-el-api" }
jakarta-el-impl = { module = "org.glassfish:jakarta.el", version.ref = "jakarta-el-impl" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-datatype-guava = { module = "com.fasterxml.jackson.datatype:jackson-datatype-guava", version.ref = "jackson" }
jackson-module-scala = { module = "com.fasterxml.jackson.module:jackson-module-scala_3", version.ref = "jackson" }
jackson-datatype-eclipse-collections = { module = "com.fasterxml.jackson.datatype:jackson-datatype-eclipse-collections", version.ref = "jackson" }
jctools = { module = "org.jctools:jctools-core", version.ref = "jctools" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-impl = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin-lang" }
kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin-lang" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-lang" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-lang" }
kotlin-gradleApi = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-api", version.ref = "kotlin-lang" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin-lang" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlinpoet-poet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet-poet" }
kotlinpoet-metadata = { module = "com.squareup:kotlinpoet-metadata", version.ref = "kotlinpoet-poet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet-poet" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf-jvm", version.ref = "kotlinx-serialization" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktlint-gradle = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
log4j-jul = { module = "org.apache.logging.log4j:log4j-jul", version.ref = "log4j" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
mongodb = { module = "org.mongodb:mongodb-driver-reactivestreams", version.ref = "mongodb-driver" }
mvel = { module = "org.mvel:mvel2", version.ref = "mvel" }
#netty-all = { module = "io.netty:netty-all", version.ref = "netty" }
netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "netty" }
netty-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty" }
netty-handler = { module = "io.netty:netty-handler", version.ref = "netty" }
scala-library = { module = "org.scala-lang:scala3-library_3", version.ref = "scala-library" }
scala-java8-compact = { module = "org.scala-lang.modules:scala-java8-compat_3", version.ref = "scala-java8-compact" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
typesafe-config = { module = "com.typesafe:config", version.ref = "typesafe-config" }
unsafe-accessor = { module = "io.github.karlatemp:unsafe-accessor", version.ref = "unsafe-accessor" }

[bundles]
jackson = ["jackson-module-kotlin", "jackson-datatype-jdk8", "jackson-datatype-guava", "jackson-datatype-eclipse-collections"]
jakarta-el = ["jakarta-el-api", "jakarta-el-impl"]
logging = ["kotlin-logging", "slf4j-api", "slf4j-simple"]
log4j = ["log4j-api", "log4j-core", "log4j-slf4j", "log4j-jul"]
el = ["jakarta-el-api", "jakarta-el-impl", "mvel"]
netty = ["netty-codec-http", "netty-handler", "netty-epoll"]
kotlin = ["kotlin-jvm", "kotlin-reflect"]
akka = ["akka-typed-actor", "akka-typed-cluster", "akka-typed-serialization-jackson"]
scala = ["scala-library", "scala-java8-compact", "jackson-module-scala"]
junit = ["junit-jupiter-engine", "junit-jupiter-api", "junit-jupiter-impl"]
